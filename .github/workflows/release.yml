name: Build and Release

on: workflow_dispatch
      
jobs:
  build:
    strategy:
      matrix:
        goos: [windows,  linux, darwin]
        goarch: [amd64, arm64, 386]
        exclude:
          - goos: darwin
            goarch: 386
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4.0.0
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> ${GITHUB_ENV}
      - name: Setup Node.js environment
        uses: actions/setup-node@v3.8.1
      - name: Install Dependencies
        run: npm install --global yarn
      - name: Setup Go environment
        uses: actions/setup-go@v4.1.0
      - name: Gen output name
        run: echo "FILENAME=t_${{ matrix.goos }}_${{ matrix.goarch }}" >> ${GITHUB_ENV}
      - name: Rename Windows File
        if: matrix.goos == 'windows'
        run: echo "FILENAME=t_${{ matrix.goos }}_${{ matrix.goarch }}.exe" >> ${GITHUB_ENV}
      - name: build
        run: CGO_ENABLED=0 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build  -o ./output/${{ env.FILENAME }}  main.go
      - name: Upload files to Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.FILENAME }}
          path: ./output/${{ env.FILENAME }}
      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./output/${{ env.FILENAME }}
          tag: ${{ github.ref }}
          body: |
            ${{ steps.read_release.outputs.RELEASE_BODY }}
          file_glob: true
